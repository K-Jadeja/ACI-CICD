name: Deploy to Azure Container Instances

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Check out the repository
    - name: Checkout GitHub Action
      uses: actions/checkout@master

    # Step 2: Log in to Azure
    - name: Login via Azure CLI
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    # Step 3: Log in to Azure Container Registry
    - name: Log in to Azure Container Registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.ACR_LOGIN_SERVER }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    # Step 4: Build and Push the Docker Image
    - name: Build and Push Docker Image
      run: |
        docker build . -t ${{ secrets.ACR_LOGIN_SERVER }}/uvicorn-backend:${{ github.sha }}
        docker push ${{ secrets.ACR_LOGIN_SERVER }}/uvicorn-backend:${{ github.sha }}

    # Step 5: Generate secure-env.yaml
    - name: Generate secure-env.yaml
      run: |
        echo "apiVersion: 2019-12-01
        location: eastus
        name: uvicorn-backend
        properties:
          osType: Linux
          restartPolicy: Always
          containers:
          - name: uvicorn-backend
            properties:
              image: ${{ secrets.ACR_LOGIN_SERVER }}/uvicorn-backend:${{ github.sha }}
              resources:
                requests:
                  cpu: 4.0
                  memoryInGB: 8.0
              ports:
              - port: 8000
              environmentVariables:" > secure-env.yaml
        
                echo "${{ secrets.ENV_FILE_CONTENT }}" | while IFS='=' read -r key value; do
                  echo "      - name: \"$key\"" >> secure-env.yaml
                  echo "        secureValue: \"$value\"" >> secure-env.yaml
                done
        
                cat secure-env.yaml
    # Step 6: Deploy using secure-env.yaml
    - name: Deploy to Azure Container Instances
      run: |
        az container create \
          --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
          --file secure-env.yaml
